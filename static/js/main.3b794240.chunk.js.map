{"version":3,"sources":["component/Time.js","App.js","index.js"],"names":["Time","day","valueStart","valueEnd","onChangeValueStart","onChangeValueEnd","className","type","onChange","min","max","step","value","App","useState","setvalueStart","setvalueEnd","class","map","time","index","ev","xid","x","UpdateChangeStart","target","e","values","xids","y","UpdateChangeEnd","onClick","swal","content","then","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b794240.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./time.css\";\r\n\r\nfunction Time({\r\n  day,\r\n  valueStart,\r\n  valueEnd,\r\n  onChangeValueStart,\r\n  onChangeValueEnd,\r\n}) {\r\n  return (\r\n    <div className=\"total\">\r\n      <div>{day}</div>\r\n      <div>\r\n        <input\r\n          type=\"time\"\r\n          onChange={onChangeValueStart}\r\n          min=\"00:00\"\r\n          max=\"23:59\"\r\n          step=\"60\"\r\n          value={valueStart}\r\n        />\r\n        &nbsp; To &nbsp;\r\n        <input\r\n          type=\"time\"\r\n          onChange={onChangeValueEnd}\r\n          min=\"00:00\"\r\n          max=\"23:59\"\r\n          step=\"60\"\r\n          value={valueEnd}\r\n        />{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Time;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Time from \"./component/Time\";\nimport swal from \"sweetalert\";\n\nfunction App() {\n  const [valueStart, setvalueStart] = useState([\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n  ]);\n  const [valueEnd, setvalueEnd] = useState([\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n    \"00:00\",\n  ]);\n  const day = [\n    \"Saturday\",\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n  ];\n\n  function UpdateChangeStart(value, xid) {\n    const x = [...valueStart];\n    x[xid] = value;\n    setvalueStart(x);\n  }\n\n  function UpdateChangeEnd(values, xids) {\n    const y = [...valueEnd];\n    y[xids] = values;\n    setvalueEnd(y);\n  }\n\n  function ShowList() {\n    swal(\"Please inter your name:\", {\n      content: \"input\",\n    }).then((value) => {\n      swal(\n        \"Hi\" +\n          \" \" +\n          `${value} ` +\n          \"\\n\" +\n          \"These are your FreeTimes:\" +\n          \"\\n\" +\n          JSON.stringify(day[0]) +\n          \": \" +\n          \" From \" +\n          \"From\" +\n          JSON.stringify(valueStart[0]) +\n          \" To \" +\n          JSON.stringify(valueEnd[0]) +\n          \"\\n\" +\n          JSON.stringify(day[1]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[1]) +\n          \" To \" +\n          JSON.stringify(valueEnd[1]) +\n          \"\\n\" +\n          JSON.stringify(day[2]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[2]) +\n          \" To \" +\n          JSON.stringify(valueEnd[2]) +\n          \"\\n\" +\n          JSON.stringify(day[3]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[3]) +\n          \" To \" +\n          JSON.stringify(valueEnd[3]) +\n          \"\\n\" +\n          JSON.stringify(day[4]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[4]) +\n          \" To \" +\n          JSON.stringify(valueEnd[4]) +\n          \"\\n\" +\n          JSON.stringify(day[5]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[5]) +\n          \" To \" +\n          JSON.stringify(valueEnd[5]) +\n          \"\\n\" +\n          JSON.stringify(day[6]) +\n          \": \" +\n          \" From \" +\n          JSON.stringify(valueStart[6]) +\n          \" To \" +\n          JSON.stringify(valueEnd[6]) +\n          \"\\n\"\n      );\n    });\n  }\n\n  function Delete() {\n    setvalueStart([\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n    ]);\n    setvalueEnd([\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n      \"00:00\",\n    ]);\n  }\n\n  return (\n    <div>\n      <div className=\"Totalss\">\n        <div className=\"Total\">\n          <div class=\"Header\">Set standard Hours</div>\n          <div class=\"Caption\">Configure the standard hours of operation</div>\n        </div>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            {day.map((time, index) => (\n              <Time\n                day={time}\n                valueStart={valueStart[index]}\n                valueEnd={valueEnd[index]}\n                onChangeValueStart={(ev) =>\n                  UpdateChangeStart(ev.target.value, index)\n                }\n                onChangeValueEnd={(e) => UpdateChangeEnd(e.target.value, index)}\n              />\n            ))}\n\n            <div className=\"buttons\">\n              <button onClick={Delete}>Cancel</button>\n              <button onClick={ShowList}> Save scheduler </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}